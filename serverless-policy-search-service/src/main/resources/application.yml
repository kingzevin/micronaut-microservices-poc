micronaut:
  application:
    name: serverless-policy-search-service
  server:
    host: ${SERVICE_HOST:0.0.0.0}
    port: ${SERVICE_PORT:7088}
---
jpa:
 default:
    packages-to-scan:
        - 'pl.altkom.asc.lab.micronaut.poc.serverless.policy.search.readmodel'
    properties:
        hibernate:
            hbm2ddl:
                auto: update
            show_sql: true
---
jackson:
  serialization:
    failOnEmptyBeans: false
    writeDatesAsTimestamps: true
---
#kafka:
#  bootstrap:
#    servers: "${KAFKA_HOST:172.17.0.1}:${KAFKA_PORT:9092}"
---
#consul:
#  client:
#    registration:
#      enabled: true
#      ip-addr: ${CONSUL_REG_IP:172.17.0.1}
#      prefer-ip-address: true
#    defaultZone: "${CONSUL_HOST:172.17.0.1}:${CONSUL_PORT:8500}"
---
#tracing:
#  zipkin:
#    enabled: true
#    http:
#      url: "http://${ZIPKIN_HOST:172.17.0.1}:${ZIPKIN_PORT:9411}"
#      sampler:
#        probability: 1.0 # Configuration taking 100% of the request to be processed by Zipkin. In a real production system, that could be overwhelming.
---
elastic:
    host: ${ELASTIC_HOST:172.17.0.1}
    port: ${ELASTIC_PORT:9200}
    connectionTimeout: 5000
    connectionRequestTimeout: 5000
    socketTimeout: 5000
    maxRetryTimeout: 5000
